from pgmpy.models import DiscreteBayesianNetwork
from pgmpy.factors.discrete import TabularCPD
from pgmpy.inference import VariableElimination
model = DiscreteBayesianNetwork([
    ('B', 'A'),  # Burglary causes Alarm
    ('E', 'A'),  # Earthquake causes Alarm
    ('A', 'D'),  # Alarm causes David to call
    ('A', 'S')   # Alarm causes Sophia to call
])
cpd_b = TabularCPD(variable='B', variable_card=2, values=[[0.999], [0.001]])
cpd_e = TabularCPD(variable='E', variable_card=2, values=[[0.998], [0.002]])
cpd_a = TabularCPD(
    variable='A',
    variable_card=2,
    values=[
        [0.999, 0.71, 0.06, 0.05],
        [0.001, 0.29, 0.94, 0.95]
    ],
    evidence=['B', 'E'],
    evidence_card=[2, 2]
)
cpd_d = TabularCPD(
    variable='D',
    variable_card=2,
    values=[[0.99, 0.3], [0.01, 0.7]],
    evidence=['A'],
    evidence_card=[2]
)


cpd_s = TabularCPD(
    variable='S',
    variable_card=2,
    values=[[0.95, 0.4], [0.05, 0.6]],
    evidence=['A'],
    evidence_card=[2]
)
model.add_cpds(cpd_b, cpd_e, cpd_a, cpd_d, cpd_s)
# Check if the model is valid
assert model.check_model()
inference = VariableElimination(model)
result = inference.query(variables=['A'],
                         evidence={'B': 0, 'E': 0, 'D': 1, 'S': 1})
print(result)
